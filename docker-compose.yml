version: '3.8'

services:
  backend:
    container_name: everfy_api
    build: .
    command: uvicorn project.main:app --reload --workers 1 --host 0.0.0.0 --port 8000
    volumes:
      - .:/app
    ports:
      - "4000:8000"
    env_file: .env
    networks:
      shared-network:
        ipv4_address: 172.16.238.10
      redis_network:
      backend_network:
      ftp_network:

  redis:
    container_name: everfy_redis
    image: redis:latest
    restart: always
    volumes:
      - ./docker/redis-data:/data
    networks:
      - redis_network
    command: redis-server

  worker:
    container_name: everfy_worker
    build: .
    volumes:
      - .:/app
    env_file: .env
    restart: on-failure
    command: celery -A project.tasks worker --concurrency=3 -l info
    networks:
      - redis_network
      - ftp_network

  beat:
    container_name: everfy_beat
    build: .
    volumes:
      - .:/app
    env_file: .env
    restart: on-failure
    command: celery -A project.tasks beat -l info --scheduler celery.beat:PersistentScheduler
    networks:
      - redis_network

  flower:
    container_name: everfy_flower
    build: .
    command: celery flower --port=5555 --persistent=True
    ports:
      - "5000:5555"
    env_file: .env
    networks:
      - backend_network
      - redis_network
    depends_on:
      - worker
      - redis

  ftp:
    image: stilliard/pure-ftpd:hardened
    container_name: everfy_ftp
    volumes:
      - ./docker/ftp/data:/home/globant/
      - ./docker/ftp/password:/etc/pure-ftpd/passwd
    ports:
      - "2000:21"
      - "30000-30009:30000-30009"
    env_file: .env
    networks:
      - ftp_network
    restart: always

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      shared-network:
        ipv4_address: 172.16.238.11

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    user: "472"
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./datasource.yml:/etc/grafana/provisioning/datasource.yml
    env_file: .env
    networks:
      shared-network:
        ipv4_address: 172.16.238.12

networks:
  redis_network:
  backend_network:
  ftp_network:
  shared-network:
    name: shared-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
